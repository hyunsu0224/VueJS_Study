https://html5exam.jp/measures/lv1_4.html
BMP : 윈도우에서 제작한 사진형태, WEB에서는 사용할수없다.
JPEG : 풀컬리로 표현이 가능, 그라데이션도 깨끗히 표현된다.
PNG : JPEG와 동일하게 풀컬러 펴현이 가능하지만, 파일 사이즈가 JPEG보다 큰 경우가 있다. JPEG와 다른 점이라면 배경 투과가 가능하다.
GIP : 배경 투과가 가능하고, 애니메이션도 가능하지만, 256가지 색밖에 표현되지 못한다.
	과거에는 투과GIF에서 라이센스의 문제가 발생해서 PNG가 개발되었다.
TIFF : 고해상도의 이미지에 적합하지만 크기가 커진다.

--------------------------------------

웹 사이트의 콘텐츠를 중앙에서 관리하는 구조의 명칭은?
CMS(Contents Management System) : 일반적으로는 웹사이트의 콘텐츠를 웹브라우저에서 HTML지식을 필요하지 않도록 편집하는것을 CMS라고 많이들 부른다.

--------------------------------------

title 태그에 대하여
title 태그는 필수가 아니다.
HTML 4.01까지는 title태그가 생략할수없었지만, HTML5 부터는 필요하지 않으면 생략이 가능하다.


--------------------------------------

HTTP 인증 방식
1. BASIC 인증 -> 사용자가 입력한 사용자 이름과 암호는 암호화 되지 않고 그대로 전송된다.
2. DIGEST 방식 -> 사용자 이름과 암호는 MD5라는 해시 함수를 사용하여 사용자 이름과 암호를 Digest(해시)해서 전송한다.
3. SSL : MDN-> 128비튼 문여 확인, 암호화, 체크섬 무결성 검사에 확인

HTTP 프로토콜은 대부분 4단계의 트랜스 포트 프로토콜에 TCP을 이용한다.
포트 번호를 지정하지 않으면 자동으로 80번 포트에 접속한다.
HTTP의 정의된 메소드는 GET, POST, PUT, DELETE, HEAD 등 총 8가지가 있다.
2XX -> 성공

3XX -> redirection 완료 (이동함) 
301 영구이동 // 302 임시이동

4XX -> 요청 오류 
400 잘못된 요청(구문 자체를 잘못 작성함) // 401 권한없음 // 402 결제가 필요 // 403 서버가 요청을 거부  // 404 요청한 페이지를 찾을 수 없음(서버에 존재하지 않는 페이지)

5XX -> 서버 오류 
500 내부 서버오류 // 501 구현되지 않음 // 503 서비스를 사용할수없음 // 504 게이트웨이 시간초과



--------------------------------------

コンテンツ・モデル Content models
・メタデータ・コンテンツ 	meta data
-> 나머지 콘텐츠의 표현이나 동작을 설정하거나 다른 문서와의 관계를 설정하거나 다른 정보를 전달하는 콘텐츠
base, link, meta, noscript(자바스크립트가 동작하지 않을때 보여줄 콘텐츠), script, style, template, title

・フロー・コンテンツ		flow 
-> body 내부에 존재하는 대부분의 요소
너무 많으므로 생략
div는 여기에 포함된다.

	
・セクショニング・コンテンツ	sectioning
-> 제목요소, 푸터요소의 범위를 나타내는 요소, 이 요소를 위해서는 outline에 대해서 이해를 해야한다.
article, aside, nav, section

・ヘッディング・コンテンツ	heading
-> 섹션의 제목을 나타내는 요소(머릿글)
h1 h2 h3 h4 h5 h6

・フレージング・コンテンツ	phrasing
-> 문서 내의 텍스트, 문장처럼 취급되는 것들도 포함한다.

span, a ,b ,code 등등 여러가지


・エンベッディッド・コンテンツ	embedded
-> 외부에서 콘텐츠를 가져오는 요소를 지칭한다.
audio, canvas, embed, iframe, img, object, svg, video, picture, math

・インタラクティブ・コンテンツ	interactive
-> 유저와 상호작용을 하는 요소, interactive 요소 내부에 interactive 요소를 넣을 수 없다.
예) button 태그 안에 button을 넣을수 없다. 와 같은 경우이다.
a, audio, button, details, embed, iframe, img, input, label, select, textarea, video

--------------------------------------

Data URI,통상 외부 파일의 URI을 기술한다.
img 태그의 src 속성이나 css의 url()에 직접 영상데이터를 불러오는 기술이다.
한번의 요청으로 Data URI에서 불러오는 경우 통신횟수를 감소시켜 고속화가 가능하다.
영상데이터에는 텍스트로 보면 표시 가능한 문자 이외도 포함되어있지만, Base64 인코딩을 하여 문자로 나타낼 수 있게한다.
브라우저의 호환성에 따라 적용이 될수도 안될수도 있다.
HTML src속성, css에서 bacground-image의 url로 지정이 가능하다.

--------------------------------------

문자 인코딩 설정
meta 태그의 charset을 이용해서 지정이 가능하다.
<meta charset="UTF-8"> 이 인코딩하는 태그이다.

주의!! <html lang="ja">는 인코딩하는 태그가 아니라 언어를 설정하는 태그이다.

--------------------------------------

SSL/TLS의 표준이 오래된 순서대로 나열하시오
SSL 1.0 ➡ SSL 2.0 ➡ SSL 3.0 ➡ TLS 1.0 ➡ TLS 1.1 ➡ TLS 1.2
SSL은 일반적으로 사용되어왔지만 , 최근에는 SSL보다 TLS를 많이 사용하고있습니다.
OpenSSL은 실제 프로그램이므로 혼동하지 않도록 주의하자.

--------------------------------------

HTTPS를 사용하여 Web 서버의 정당성을 확인하는데 필요한 것
HTTPS는 web 클라이언트와 web서버 사이의 통신을 암호화 하는 것 이외에도
web 서버의 정당성을 보장하는 구조를 가지고있다.
정당성을 보장하기 위해서 「서버인증서」라는 파일을 설치한다.
「서버인증서」에는 web서버의 호스트 이름 등의 정보 외에 정당성을 보장하기위한 재3자 관련에 「인증기관」의 전자서명이 부여되어야한다.
web클라이언트에서 액세서하는 web 서버로부터 서버 인증서를 받을 때 인증 기관에 연락을 하고, 인증서의 유효성을 확인합니다.
정당성이 확인된 web 페이지 주소 표시 줄에는 자물쇠 아이콘이 표시되어있다.
TLS(SSl)프로토콜을 이용해서 통신한다.

--------------------------------------

Base64에 대한 설명
바이너리 데이터와 바이트 문자열의 규칙을 따라 ASCII(영숫자, 기호, 반각문자) 문자 중 문자, 숫자 및 기호의 인쇄 가능한 문자만 서술된 텍스트 데이터로 변환된다.

--------------------------------------

HTTPS는 보안 향상을 위해 사용한다.
데이터를 암호화하여 송수신
데이터 암호화는 TLS 또는 SSL 프로토콜을 사용하여 TLS・SSL세션을 설정한 다음에 HTTP 통신을 한다.
HTTP는 IETF에서 표준화 되어있고 HTTPS는 표준화되어있지 않다.

--------------------------------------

link 태그에는 반드시 rel="stylesheet" 속성이 들어가야한다.

--------------------------------------

XHTML 특성
HTML5는 XHTML 형식을 사용할수 있다.
XHTML의 속성값은 ""나 ''로 묶어야한다.

--------------------------------------

CSS에 관해서!!!!!!!!!!!!!!----------------------------------------------------------------------------
:first-child,:hover 와 같은 것들은 의사 클래스 10점
:이 1개인 경우 10점
::은 의사 요소가 되므로 1점(유형 선택기)
*는 카운트 되지 않으므로 0점
[] 은 속성 셀렉터로 10점
요소로 지정하는 경우는 1점 (예: div span p a 와 같은)
클래스 명은 10점
아이디 명은 100점


css의 외부 스타일시트가 있더라도 동일한 요소 점수라면 가장 마지막에 온 스타일 시트로 적용이되고,
만약 점수가 더 높은데 앞서 온것이라면 먼저 적용이된다.

order 속성의 경우 display flex일 때 작용하는데 order의 디폴트 값은 0 으로 다른 요소를 1이나 2로 바꾼다고해서 순서가 변경되지 않는다.
-1과 같이 디폴트값보다 더 작은 값으로 변경할 경우에는 배치 이동이 가능하다.

style 요소에 지정 가능한 속성
type media charset

sticky와 fixed는 sticky라는 큰 틀 안에 fixed가 있다고 생각하면 이해하기가 쉽다.
sticky는 스크롤을 하다가 지정한 ofset에 닿을 경우 position : relative에서 position:fixed같은 느낌으로 작동하기 시작한다.
다만 fixed는 처음부터 화면의 특정부분에서 고정을 하고 스크롤을 해도 아무런 움직임이 없다.
그리고 sticy는 top,right,bottom,left 속성이 필수이다.
sticky는 scroll box에 고정이고
fixed는 view-port에 고정이다.
뷰포트와 scroll 박스가 동일한 것처럼 보이는 경우도 있지만 뷰포트는 하나뿐이고 scroll박스는 문서안에서 더 많이 생성할 수 있다.

자식요소에 강제로 영향을 미치도록 하는 값은 inherit

transform속성으로 지정가능한 함수는
perspective -> 3D변형의 깊이감을 지정할 수 있는 함수
rotate3d -> 요소를 회전 표시할 수 있는 함수
scale3d -> 요소의 3d 축척 비율을 지정할 수 있는 함수
translate3d -> 요소를 3D 방향으로 이동시킬 수 있는 함수

지정할수 없는 함수는
opacity -> 투명도를 지정하는 함수 별개의 속성이다.

background속성으로는 background-color의 경우 쉼표로 값을 구분할수 없다.
쉼표로 background으로 한번에 url(''), url(''),linear-gradient 등의 방식으로 여러 이미지와 색을 등록할 수가 있다.
이때 background에 등록한 이미지 수만큼 background-repeat과 background-position을 지정해 주어야한다.
background-position을 지정해서 이미지의 위치를 배치해주어야 결과가 나온다. 지정하지 않으면 같은 위치에 전부 표기되므로 하나의 이미지만 나오는 것처럼
보여질 수 있다.

box-shadow는 1개만 지정이 불가하다 최소 2개 부터 지정 가능
box-shadow : 
첫번째(수평 방향의 offset 양수면 오른쪽, 음수는 왼쪽) 
두번째(수직방향 offset 양수는 아래 음수는 위) 
세번째(흐림반경 0이면 흐려지지않고 선명 클수록 흐릿) 
네번째(확산거리 양수는 전방 위로, 음수는  그림자 크기가 줄어듬) 
다섯번째(그림자 색상) inset(요소 내부에 그림자) 지정하면 기존값에 정반대로 표기됨

カスケード(스타일의 우선순위)
1. !important가 있는 user 스타일시트
2. !important가 있는 제작자 스타일시트
3. user agent(browser) 스타일시트
4. user 스타일 시트
5. 제작자 스타일 시트

상세도에 따른 우선순위
태그의 style 속성에 직접 쓰기	style=”color: red;”	1000 포인트
ID 선택기			#example		100점
클래스 선택기		.demo			10점
속성 선택기			[lang=”ko”]		10점
의사 클래스			:link			10점
요소형 셀렉터		p			1점
의사 요소			::first-line		1점
전칭 셀렉터			*			0 점

<계산 예>
설명 예			계산						합계
style=”color: red;”	1000(style 속성)					1000 포인트
#example		100(ID 셀렉터)					100점
div.content.demo	1(요소형 셀렉터)+10(클래스 셀렉터)+10(클래스 셀렉터)	21점
div[lang=”ko”]	1(요소형 선택기) + 10(속성 선택기)			11 점
a:link			1(요소형 셀렉터) + 10(의사 클래스)			11 점
h1 div + span		1(요소형 선택기)+1(요소형 선택기)+1(요소형 선택기)		3점
*::first-line		0(전칭 셀렉터)+1(의사 요소)				1점

의사 클래스와 의사 요소의 차이를 명확히 하기 위해서 CSS3에서는 의사 요소 이름 앞에 콜론 2개를 붙이게 되어있었다.
:first-child는 의사 클래스이고 ::first-letter이 의사 요소이다. 따라서 ::first-child는 잘못된 표현

columns 속성은 단의 폭과 개수를 지정한다.
column-gap은 단과 단 사이의 여백을 지정한다.
길이가 충족되지 않으면 단이 늘어나지 않고 아래로 내려간다.
--------------------------------------
--------------------------------------
--------------------------------------
1.3 要素
meter 요소 ➡ value의 속성값에서 low high optimum 속성을 지정이 가능하다. 값이 어느정도인지 확인하는것.
b 요소 ➡ bold효과를 낸다. 중요한 부분이거나 특별한 의미를 가진경우, 실용적인 목적에서 눈에 띄게하고싶은 부분에 대해서 사용하는 요소,
	문장 내의 키워드나 제품명인 부분에 사용한다.
i 요소 ➡ 문서내의 텍스트 중에서 이질적인 부분에 사용한다. 예를 들면, 영문서에서 독일어를 사용한다던지, 전문용어, 학명과같은 부분
s 요소 ➡ 바른 정보가 아닌 경우에 사용한다, 관련성이 없어진 부분
u 요소 ➡ 중국어 텍스트에서 고유명사를 사용 하는 경우, 단어의 철자가 잘못되었다고 생각되는 경우
em 요소 ➡ 문장에 강조하고 싶은 부분, 같은 내용의 문장이더라도, 이 요소를 어디에 하는가에 따라 의미가 바뀐다.
source 요소 ➡ HTML 5.1 ver에서 부터 picture 요소 내에서도 사용이 가능하다. picture 요소 안에서 배치하는 경우와 video,audio요소 내부에 배치한 경우와는 사용 가능한 속성이 다르다.
--------video,audio 요소 내부에서는 source요소가 media 속성을 지정 못한다.
	하지만 picture에서는 지정이 가능하다.
--------source요소에서 type속성은 지정이 가능하다.
--------source요소가 picture 요소 내부에서 사용되는 경우 srcset 및 sizes 속성을 지정할 수 있다.
--------source요소는 width or height 속성을 지정할 수 없다.

abbr 요소 ➡ 약어를 지정 abbr title="HyperText Markup Language">HTML</abbr>로 지정하면 HTML 글자에 마우스를 올리면 전체 글자가 나온다.
mark 요소 ➡ 형광펜처럼 기본 노란색이 나온다.黄色
q 요소 ➡ 콘텐츠 카테고리는 (flow content, freezing ocntent)이다.
	따옴표 안에 표시가 된다.
	cite 속성으로 지정하여 인용문에 관한 정보가 있는 URL을 표기한다.
	인용문을 지정할때 꼭 q 요소가 아니여도된다.
	따옴표를 붙일 목적으로 사용해서는 안된다.

a 요소 ➡ a요소에는 interactive content는 넣을수가 없다. 예를 들면 a, label, iframe, tabindex등이된다.
hr 요소 ➡ 단락 레벨에서의 주제변화를 나타내는 요소이다. 섹션이 변하지 않는다는 것을 나타내기 위해 있는 것

audio와 video에 동시에 지정 가능 한 속성 ➡ preload(데이터의 사전 로드에 대한 지시를 제공none,metadata,auto 키워드가 있다.)
				    , crossorigin(읽어들이는 데이터를 다른 origin으로부터 취득할 때의 인증 모드를 설정하는 속성 anonymous, use-credentials 키워드가 있다.)

iframe 요소 ➡ iframe의 srcdoc속성은 iframe요소에서 표시하는 HTML문서소스코드를 수치하여 다이렉트로 지정하는 속성이다.
		HTML5의 DOCTYPE선언은 브라우저의 스위치를 제어하기 위한것이므로 srcdoc에서는 선택사항이다.
		html, head, body요소에 관해서도 srcdoc속성에 지정하는 HTML문서인지 어떤지에 관계없이, 태그 생략이 가능하다.

논리 속성이란, 값을 지정하지 않고 속성명만으로 지정이 가능한 것을 말한다.(boolean attribute)
src, crossorigin, poster, preload, autoplay(auto가 default),loop, muted, controls, width, height

textarea에서 지정가능한 속성 ➡
none : 크기 조정을 허용하지 않는다.
horizontal : 수평 방향으로만 크기 조정을 허용
vertical : 수직 방향으로만 크기 조정을 허용
both : 수평, 수직 방향 모두 resize를 허가한다(기본값 default)
inherit : 부모 요소의 값을 상속
code ➡ 컴퓨터 코드 범위로 설정, 기본적인 고정폭 글꼴 계열로 표시된다.
main 요소 ➡ 문서에 한번만 사용이 가능하다. 무조건 최상위 위치
sub ➡ 아래 첨자
sup ➡ 위 첨자
time ➡ 시간을 나타내는것 <time>21:00</time> 이런식으로만 해도 되고 <time datetime="2006-02-14">valentine day</time>등으로 지정해도 괜찮다.
del(delete) ➡ 삭제된 내용을 표기한다 글자 가운데 줄이 그어짐
ins(insert) ➡ 새로 추가된 텍스트의 범위를 지정
img ➡ 에 지정 가능한 속성으로는 src, alt, width, height, srcset, sizes 가 있다. <img src="test.jpg" alt="test_file" width="500" height="500"></img> 이런식으로 지정해도 괜찮다.
srcset 속성에 지정하는 내용은 여러 이미지를 등록하는 것으로 하단에 1.4 반응형web디자인에 srcset에 대하여 자세하게 나와있다.

audio ➡ 소리 콘텐츠(MP3), autoplay가 속성으로 지정된 경우 preload는 무시된다.
지정가능한 속성으로는 autoplay(준비되면 바로 재생), controls(제어 메뉴를 표시), loop(재생이 끝나면 다시 처음부터 재생), preload(페이지가 로드될 때 파일을 로드할지의 지정), src(콘텐츠URL), muted(음소거 여부)

video ➡ 동영상 콘텐츠(MP4), autoplay가 속성으로 지정된 경우 preload는 무시된다.
지정가능한 속성으로는 autoplay(준비되면 바로 재생), controls(제어 메뉴를 표시), loop(재생이 끝나면 다시 처음부터 재생), preload(페이지가 로드될 때 파일을 로드할지의 지정), src(콘텐츠URL), muted(음소거 여부), poster(동영상 썸네일 이미지 URL), width(동영상 가로너비), height(동영상 세로 너비)

figure ➡ 이미지나 삽화, 도표 등의 영역을 설정
figcaption ➡ figure에 포함되어 있는 이미지나 삽화등의 설명을 표시


--------------------------------------<내장 콘텐츠>--------------------------------------
iframe ➡ 다른 HTML 페이지를 현재 페이지에 삽입(중첩된 브라우저 컨텍스트(프레임)를 표시)
name(프레임의 이름), src(포함할 문서의 URL), width(프레임의 가로 너비), height(프레임의 세로 너비), allowfullscreen(프레임 테두리 사용 여부 boolean), frameborder(프레임 테두리 사용 여부 0, 1), sandbox(보안을 위한 읽기 전용으로 삽입 boolean or allow-form(양식제출가능), allow-scripts(스크립트 실행가능), allow-same-origin(같은 출처(도메인)의 리소스 사용 가능))

canvas ➡ canvas API나 WebGL API를 사용하여 그래픽이나 애니메이션을 랜더링 할수있다.
width, height 지정 <canvas id="test" width="200" height="200"></canvas>

script ➡ 스크립트 코드를 문서에 포함하거나 참조(외부 스크립트)
async(비동기적 실행 여부), defer(문서 구문분석 후에 작동 여부), src(참조할 외부 스크립트 URL), type(MIME 타입 ➡ 기본값은 text/javascript)

noscript ➡ 스크립트를 지원하지 않는 경우에 삽입할 HTML을 정의

--------------------------------------<표 콘텐츠>--------------------------------------
table, tr, th, td
데이터 표(table)		 ➡ table
행/줄 (tr) Table Row	 ➡ table-row
열/칸/셀 (th, td) Table Header, Table Data	 ➡ table-cell
th는 표에서 header 타이틀 부분
td는 th 다음에 오는 내용 부분
<table>
	<tr>
		<th>1</th>
		<th>2</th>
	</tr>
	<tr>
		<td>1_1</td>
		<td>2_1</td>
	</tr>
	<tr>
		<td>1_2</td>
		<td>2_2</td>
	</tr>
</table>

th에 지정 가능한 속성으로는 addr(열에 대한 간단한 설명), headers(관련된 하나 이상의 다른 머리글 칸 id 속성값), colspan(확장하려는(병합) 열의 수), rowspan(확장하려는(병합) 행의 수), scope(자신이 누구의 '머리글 칸'인지 명시 ➡ 값으로는 col, colgroup,row,rowgroup,auto)
td(일반 칸) headers(관련된 하나 이상의 다른 머리글 칸 id 속성값), colspan(확장하려는(병합) 열의 수), rowspan(확장하려는(병합)행의 수)

caption ➡ 표의 제목을 설정(table태그 안에서 가장 첫번째 자식요소로 설정해야함, table당 하나의 caption만 지정이 가능하다.)

colgroup, col ➡ 표의 열들을 공통적으로 정의하는 column, colgroup이다.

--------------------------------------<양식>--------------------------------------
form ➡ 웹 서버에 정보를 제출하기 위한 양식 범위를 정의
form에 다른 form을 자식요소로 지정할 수 없다.
속성으로는 	 action(전송한 정보를 처리할 웹페이지의 URL), autocomplete(이전에 입력한 값을 자동완성할지 여부 ➡ on,off), method(서버로 전송할 HTTP 방식 ➡ GET(기본값)/POST), name(고유한 양식의 이름), 
			novalidate(서버로 전송시 양식 데이터의 유효성 검사를 하지 않도록 지정), target(서버로 전송 후 응답받을 형식 ➡ _self,_blank)

input 			➡ 사용자에게 입력 받을 데이터 양식
autocomplete 	➡ 자동 완성 기능
autofocus 		➡ 페이지가 로드될 때 자동으로 포커스
checked 		➡ 양식이 선택되었음을 표시
disabled 		➡ 양식을 비활성화
form 			➡ form의 id 속성값
list 			➡ 참조할 datalist의 id 속성값
max 			➡ 지정 가능한 최대 값
min 			➡ 지정 가능한 최소 값
maxlength 		➡ 입력 가능한 최대 문자 수
multiple 		➡ 둘 이상의 값을 입력할 수 있는지 여부
name 			➡ 양식의 이름
placeholder		➡ 사용자가 입력할 값의 힌트
readonly		➡ 수정 불가한 읽기 전용
step			➡ 유효한 증감 숫자의 간격
src
alt
type			➡ 입력 받을 데이터의 종류(밑에 추가 설명)
value			➡ 양식의 초기 값

데이터 종류(type)의 값(values)
type 속성에 입력할 수 있는 값의 목록
--------------------------------------
button		➡ 일반 버튼
checkbox	➡ 체크 박스
color		➡ 색상
email		➡ 이메일
file		➡ 파일
hidden		➡ 보이지 않지만 전송할 양식
image		➡ 이미지 제출 버튼
number		➡ 숫자
password	➡ 비밀
radio		➡ 라디오 버튼
range		➡ 범위 컨트롤
reset		➡ 초기화
search		➡ 검색
submit		➡ 제출 버튼
tel			➡ 전화번호
text		➡ 일반 텍스트
url			➡ 절대 URL

--------------------------------------
label
라벨 가능 요소의 제목
for 속성으로 라벨 가능 요소를 참조하거나 콘텐츠로 포함(참조할 라벨 가능 요소의 id 속성값을 지정)
라벨 가능 요소 : button, input, progress, select, textarea
ex)
input과 label이 떨어져 있는 경우 for를 이용하여 연동시킨다.
<input type="checkbox" id="user-agreement"/>
<label for="user-agreement">동의 하십니까
</label>

label 내부에 input이 들어 있는 경우 for를 사용하지 않아도 괜찮다.
<label><input type="checkbox" />동의 하십니까</label>

--------------------------------------

button
선택 가능한 버튼을 지정
autofocus ➡ 페이지가 로드될때 자동으로 포커스
disabled ➡ 버튼을 비활성화
form	 ➡ form의 id 속성
name	 ➡ 폼 데이터와 함께 전송되는 버튼의 이름
type	 ➡ 버튼의 타입(button, rest, submit)

--------------------------------------

textarea
여러 줄의 일반 텍스트 양식
autocomplete
autofocus
disabled
form
maxlength
name
placeholder
readonly
rows

--------------------------------------

fieldset, legend
같은 목적의 양식을 그룹화(fieldset)하여 제목(legend)을 지정
입력 양식과 같은 부분을 fieldset 하여 legend 제목을 지정하는 것이다 박스 안에 내용물을 집어 넣는것처럼
legend(제목)을 float를 이용해서 right left top 다양한 위치에 지정이 가능하다. bottom은 안된다.

fieldset ➡ 같은 목적의 양식을 그룹화 (disabled, form, name)

--------------------------------------

옵션(optgroup, option)의 선택 메뉴(select)나 자동완성(datalist)을 제공
<select>
  <optgroup label="Coffee">
    <option>Americano</option>
    <option label="Cappuccino" value="Cappuccino"></option>
  </optgroup>
  <optgroup label="Latte" disabled>
    <option>Caffe Latte</option>
    <option>Vanilla Latte</option>
  </optgroup>
</select>

select ➡ autocomplete, disabled, form, multiple, name, size(한번에 볼 수 있는 행의 개수)
datalist(input에 미리 정의된 옵션을 지정하여 자동완성 하는 기능을 제공하는데 사용) ➡ input의 list 속성 바인딩, option을 포함하여 정의된 옵션을 지정
optgroup ➡ option을 그룹화(label(옵션의 그룹 이름), disabled)
option ➡ 선택 메뉴(select)나 자동완성(datalist)에서 사용될 옵션(disabled, label, selected, value)

progress ➡ 작업의 완료 진행률을 표시(max : 작업의 총량, value : 작업의 진행량(max를 생략할 경우 0 ~ 1 사이의 숫자여야 함))
<progress value="70" max="100"> 70%</progress>

--------------------------------------

전역 속성(Global Attributes) ➡ 모든 HTML 요소에서 공통적으로 사용 가능한 속성
class, id, style, title, lang, data-*, draggable, hidden, tabindex, 

select자리에 datalist를 자리 할수 있다. datalist는 칸에서 직접 값을 입력하여서 일치하는 값으로 자동 완성이 가능하다.
select에서는 입력을 하여도 보이지는 않지만 파일 탐색과 같이 일치하는 값을 불러온다.
optgroup는 옵션의 제목을 지정하는 것이다.

--------------------------------------

생략한 요소
template, map, area, picture, source, track, embed, object, param, 

--------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.4 レスポンシブWebデザイン

미디어 쿼리(メディアクエリ)란, @media screen and (max-width : 480px), (orientation : landscape)과 같이 특정 조건에서만 사용이 가능하도록 특정한 규칙에 의해서만 브라우저에 작동하도록 설정하는 것이다.

미디어 쿼리가 지정이 가능한 속성들로는
link 요소의 media 속성
style 요소의 media 속성
img 요소의 sizes 속성
source 요소의 sizes 속성
(단순하게 style 속성이라고만 적혀있는 경우 이때는 css 속성을 지정하는것이므로 media query와는 다른 것을 의미한다.)

img 요소의 sizes 속성중에서 사용하는 vw라는 단위는
vw ➡　ビューポートの幅の1%を1とする単位である(뷰포트의 너비에서 1%를 1로 하는 단위)
vh　➡	뷰포트의 높이의 몇퍼센트인지
vmin　➡ 뷰포트의 너비와 높이에서 짧은 것에서 몇 퍼센트를 사용
vmax　➡ 뷰포트의 너비와 높이에서 긴 것에서 몇 퍼센트를 사용
--------------------------------------
meta 요소 중에서 접근성이나 사용성 문제가 발생할 수 있으므로 지정해서는 안된다고 여겨지는 것은?
<meta name="viewport" content="maximum-scale=1.0">　➡　사용자가 화면 확대를 1.0배로 제한(확대를 금지)
<meta name="viewport" content="user-scalable=no">　➡　사용자가 화면을 확대하거나 축소하지 못하도록 한다.
위 2개는 접근성에 있어서 문제가 발생할수 있으므로 지정을 하지않는게 좋다.

아래 내용은 사용해도 되는 것
<meta name="viewport" content="initial-scale=1.0">　➡　초기 상태에서의 1.0배(실사이즈)로 나타나도록 한다.
<meta name="viewport" content="user-scalable=yes">　➡　사용자가 화면을 확대/축소할 수 있다.
<meta name="viewport" content="width=device-width">　➡　뷰포트의 너비를 장비의 화면 너비와 일치시킨다.
--------------------------------------
미디어 쿼리를 지정할때 (@media) 서식의 선두에 지정하는 all, screen, print 등이 생략되어 있는 경우 all 또는 all and가 생략된것이라고 생각하면 된다. 즉 all은 default 값인것이다.
따라서 @media {}, @media all{}, @media all and{} , @media (min-width:500px) and (max-width : 600px) 이런식으로 지정해도 문제가 되지않는다.

--------------------------------------
srcset 속성이란 '이미지 소스의 세트'라는 의미이다.
1. 같은 비율의 다양한 크기를 가지는 동일 이미지들을 최소 2개 이상 명시하는 속성이다.
2. 하나의 이미지만 명시하기 위해서는 src 속성만 사용하면 된다.
3. srcset 속성은 브라우저에 이미지 선택권을 위임하는 속성으로
   환경에 맞춰서 자동으로 선택되도록 하는 것이 큰 특징이다. 하지만 @media를 사용해서 선택해주는 것이 더 좋다.
4. x 디스크립터(x descriptor)와 w 디스크립터(w descriptor)는 개발자의 브라우저에 이미지의 크기를 알려주는 용도의 단위이다.
예문 ) <img src="cat.jpg" srcset="cat.jpg, cat-2X.jpg 2x"> 맨 마지막에 오는 2x가 디스플레이의 비율이다 해당 예문은 2배이다. 소수점 단위로도 지정이 가능하다.正の整数라고만 하면 틀린다. 小数点数 소수점도 등록이 가능하다 1.1 1.5 와 같이

--------------------------------------

미디어 쿼리의 출력 대상으로는 레벨 3의 경우 tv, projector, tty, handheld 등이 정의되어 있고, 레벨4의 경우 all, screen, print, speech만이 정의 된다.
특성으로는 width, height, resolution, orientation, aspect-ratio 등 지정가능한 것들이 있지만 orientation에 지정 가능한 것은 portrait와 landscape이다. protrait는 '세로'로 landscape는 '가로'라는 의미로 사용되고있다.

--------------------------------------
meta 태그의 하나
format-detection
<meta name="format-detection" content="telephone=on"/>
스마트폰으로 볼때 전화번호나 메일 주소를 마음대로 링크하지 말라는 뜻
예를 들어 핸드폰에 전화번호를 입력하면 자동으로 앱으로 연결하는 확장 기능이 있는데 이 기능을 막는다는 뜻이다.

--------------------------------------
브라우저의 북마크나 탭에 표시하는 아이콘의 설정
favicon이란,브라우저의 title과 같이 표기되도록하는 아이콘을 뜻한다.
<link rel="icon" href="/favicon.png">
<link rel="shortcut icon" href="/favicon.png">
이때 지정가능한 rel속성은 icon 뿐이다 shortcut은 아무런 의미를 가지고 있지않다.

<link rel="android-touch-icon" href="/favicon.png"> -> 이런건 없다.

<link rel="apple-touch-icon" href="/favicon.png"> -> 아이콘이 ios로 가공되고 모서리가 둥글게 표시
<link rel="apple-touch-icon-precomposed" href="/favicon.png"> -> 가공되지 않고 그대로 표기된다.
위 2가지는 iOS 터치 아이콘 설정이다.

--------------------------------------
CSS Image Sprite(이미지 스프라이트)
여러개의 이미지를 하나의 이미지로 합쳐서 관리하는 이미지를 의미한다.
예를 들어 가로 100px 세로 20px인 이미지가 있다면 이 이미지를 가로20px 세로 20px씩 끊어서 하나씩 표기하는 것이다.
이것의 장점으로는 하나의 이미지로 모아서 한번에 페이지에 로드 하므로 페이지 표시 속도를 빠르게 해준다.
단점으로는 CSS로 위치와 크기를 지정해야하므로 귀찮다.

--------------------------------------
grid(그리드) 시스템에 대하여 (css로 지정하는 것이다. display:grid;)
fluid grid -> 이건 표처럼 나타내는것(그리드 요소들을 표 내에서 범위를 지정하고 크기를 지정하는 방식으로 신문처럼 지정하는 방식을 뜻한다.)
fluid image -> 이것은 스마트폰 사이트나 반응형 웹 디자인에서 화면 크기에 맞춰 이미지의 크기를 조절하는 것(이미지의 비율은 유지하면서 크기를 디스플레이 환경에 맞춘다) px로 width를 지정하는것이 아니라 %로 지정하는 것을 의미한다.

--------------------------------------

Fluid Image(플루이드 이미지)는 윈도우 사이즈를 윈도우 폭에 따라 변화시키는 기법.
사용 방법으로는 img 태그에 별도의 width, height를 지정하지 않고,
CSS 요소에 max-width속성만을 지정해서 사용하는 것이다.
max-height를 지정한다고 해도 윈도우 너비에 따라 높이가 변경되지 않는다는 것을 알 수있다.

--------------------------------------

@media screen and (max-width : 1024px) and (orientation : landscape(세로상태))  width < height 에서 만약 너비가 1024px인데 이보다 height길이가 더 짧은 경우
위 미디어 쿼리는 적용되지 않는다.
portrait는 width > height  가로로 눕힌 상태


<picture>
 <source media="(max-width: 500px)" srcset="A.jpg, B.jpg 2x">
  <img src="C.jpg" srcset="D.jpg 2x" alt="">
</picture>
위의 예문의 경우에는 
뷰포트의 너비가 500px 이하인 경우에는 A.jpg 또는 B.jpg가 표시되는데 이중에서도,
픽셀의 밀도가 2배인 환경의 경우에는 B.jpg가 표시된다.
뷰포트의 너비가 500px 이상인 경우에서는 C.jpg 또는 D.jpg가 표시되는데 이중에서도,
픽셀의 밀도가 2배인 환경의 경우에는 D.jpg가 표시된다.
픽셀 밀도의 기술 형식은 반드시 x 소문자로만 작성이 되어야 하고, 0보다 큰 숫자에서 소수점 단위도 지정이 가능하다. 1.5x 등 default값은 1x 로 지정되어있다.